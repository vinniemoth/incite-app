datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(uuid())
  username  String     @unique
  email     String     @unique
  password  String
  posts     Post[]
  reactions Reaction[]

  following UserFollows[] @relation("FollowerToFollowing")
  followers UserFollows[] @relation("FollowingToFollower")
}

model UserFollows {
  id          String @id @default(uuid())
  followerId  String
  follower    User @relation("FollowerToFollowing", fields: [followerId], references: [id])
  followingId String
  following   User @relation("FollowingToFollower", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}

model Post {
  id          String     @id @default(uuid())
  bookName    String
  bookId      String
  authorsName String[]
  coverImage  String
  quote       String     @db.Text
  createdAt   DateTime   @default(now())
  reactions   Reaction[]

  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id])
}

enum ReactionType {
  LIKE
  LOVE
  FUNNY
  SAD
}

model Reaction {
  id        String       @id @default(uuid())
  userId    String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId    String
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  type      ReactionType
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  @@unique([userId, postId])
}
